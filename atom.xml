<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[XdShen's Blog]]></title>
  <link href="http://xudshen.github.com/atom.xml" rel="self"/>
  <link href="http://xudshen.github.com/"/>
  <updated>2013-06-08T01:05:34+08:00</updated>
  <id>http://xudshen.github.com/</id>
  <author>
    <name><![CDATA[XdShen]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[[zhihu]答：为什么现在的 GUI 设计仍跳不出 button、list、icon，没有这些元素的 GUI 会是什么样子？]]></title>
    <link href="http://xudshen.github.com/archives/2013/06/08/why-are-button-list-the-basic-ui-control/"/>
    <updated>2013-06-08T00:48:00+08:00</updated>
    <id>http://xudshen.github.com/archives/2013/06/08/why-are-button-list-the-basic-ui-control</id>
    <content type="html"><![CDATA[<p>此为zhihu上的一个提问，<a href="http://www.zhihu.com/question/20269253">原文在这里</a>。</p>

<p>button,list等作为一些基础控件，从较高的层面讲，他们阐释了<strong>基本的交互语言，从而实现界面交互</strong>；就像在研究素描时，大多也就可以由三角形、圆形、矩形等构成（图一）。</p>

<!--more-->


<p><img src="http://xudshen.github.com/assets/2013/06/08/sketch.jpg" alt="图一：素描" /></p>

<p>举个例子吧，图二是一个颜色拾取板，简单分析一下，就会发现其实这一圈就是个list，只不过和一般直直的list不同，每个item进行了固定角度的旋转。</p>

<p><img src="http://xudshen.github.com/assets/2013/06/08/circlelist.jpg" alt="图二" /></p>

<p>再如1l所说的日期选择控件（图三），仍然逃不过所谓的button，list的命运。</p>

<p>我们可以叫他新控件，也可以叫做旧控件的新组合（并算不上新的交互）。</p>

<p><img src="http://xudshen.github.com/assets/2013/06/08/datepicker.jpg" alt="图三" /></p>

<p>因此，在控件设计时往往有一项准则：</p>

<blockquote><p>如果可以用以往的基本控件来组合，那么就不要重新创造一个新控件。</p></blockquote>


<p>个人看来，我们现在所说的新控件，往往是添加或重组了<strong>交互方式/顺序</strong>，并未能跳出基本控件的框框。（欢迎lx举出例子来反驳）</p>

<p>至于button，list这些基本控件是如何设计出来的，只能佩服前人的创造，简洁而又强大。</p>

<p>这样应该能够回答lz的“为什么现在的 GUI 设计仍跳不出 button,list的框架”这个问题。</p>

<hr />

<p>Add：
看了一些回答，有的从与日常生活的映射角度来分析。</p>

<p>突发奇想，要是从集合论的角度，</p>

<p>所有物体的集合对应list，</p>

<p>而对物体的操作对应button，</p>

<p>如此似乎能解释这些基础控件的起源=。=</p>

<p>想法不靠谱，额嗬嗬嗬嗬嗬嗬嗬嗬，，，</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[软工_API定义]]></title>
    <link href="http://xudshen.github.com/archives/2013/04/19/se-api-define/"/>
    <updated>2013-04-19T10:12:00+08:00</updated>
    <id>http://xudshen.github.com/archives/2013/04/19/se-api-define</id>
    <content type="html"><![CDATA[<p>软件工程课程项目API</p>

<p>为了进行更好的分工合作，将API罗列如下&#8230;</p>

<!--more-->


<h1>教程</h1>

<p>由于项目将使用tomcat+struts2+mysql搭建，请认真阅读sample中的表格提交功能以及数据加载功能。</p>

<p><a href="http://6carol6.github.io/blog/2013/04/20/school-management-system-outline/">Sample的一个简单[但不全面]的运行描述</a> 感谢小组长<a href="http://6carol6.github.io/">@6carol6</a>童鞋。</p>

<hr />

<h1>API</h1>

<h3>Index</h3>

<p><a href="#1">1. 登陆</a></p>

<p><a href="#2">2. 学生</a></p>

<p><a href="#2-0">2.0 class StuClass</a></p>

<p><a href="#2-1">2.1 个人信息页面</a></p>

<p><a href="#2-1-1">2.1.1 毕业信息核对</a></p>

<p><a href="#2-1-2">2.1.2 基本信息修改</a></p>

<hr />

<h3><a name="#1">1. 登陆(/pages/Login.jsp)</a></h3>


<p><code>action name:</code>  Login</p>

<p><code>servlet name:</code> SampleProject.Login</p>

<p><code>page value:</code></p>

<table>
<thead>
<tr>
<th align="left">name     </th>
<th align="left">type    </th>
<th align="left">field    </th>
<th align="left">more</th>
</tr>
</thead>
<tbody>
<tr>
<td align="left">username </td>
<td align="left">String  </td>
<td align="left">         </td>
<td align="left">用户名</td>
</tr>
<tr>
<td align="left">password </td>
<td align="left">String  </td>
<td align="left">         </td>
<td align="left">密码</td>
</tr>
<tr>
<td align="left">identity </td>
<td align="left">String  </td>
<td align="left">{0,1,2}  </td>
<td align="left">用户身份：学生、教师、管理员</td>
</tr>
</tbody>
</table>


<p><em>请注意这里page value的使用：是指页面将需要对应的action类中实现相应的getter和setter函数</em></p>

<p><em>例如：</em></p>

<figure class='code'><figcaption><span>表单提交  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="c1">//表单提交将默认执行action中的execute函数</span>
</span><span class='line'><span class="c1">//在执行该函数之前，所有表单中的项 将 调用 对应的setter函数进行赋值</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//Login.jsp</span>
</span><span class='line'><span class="o">&lt;</span><span class="nl">s:</span><span class="n">textfield</span> <span class="n">key</span><span class="o">=</span><span class="s">&quot;username&quot;</span><span class="o">/&gt;</span>
</span><span class='line'><span class="c1">//Login.java</span>
</span><span class='line'><span class="kd">private</span> <span class="n">String</span> <span class="n">username</span><span class="o">;</span>
</span><span class='line'><span class="kd">public</span> <span class="n">String</span> <span class="nf">getUsername</span><span class="o">()</span>
</span><span class='line'><span class="o">{</span>
</span><span class='line'>  <span class="k">return</span> <span class="n">username</span><span class="o">;</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="kd">public</span> <span class="kt">void</span> <span class="nf">setUsername</span><span class="o">(</span><span class="n">String</span> <span class="n">username</span><span class="o">)</span> <span class="c1">//username = &quot;admin&quot;</span>
</span><span class='line'><span class="o">{</span>
</span><span class='line'>  <span class="k">this</span><span class="o">.</span><span class="na">username</span> <span class="o">=</span> <span class="n">username</span><span class="o">;</span> <span class="c1">//this.username = &quot;admin&quot;</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//此时调用</span>
</span><span class='line'><span class="kd">public</span> <span class="n">String</span> <span class="nf">execute</span><span class="o">()</span> <span class="kd">throws</span> <span class="n">Exception</span>
</span><span class='line'><span class="o">{</span>
</span><span class='line'>  <span class="n">getUsername</span><span class="o">();</span><span class="c1">//得到&quot;admin&quot;</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>action method:</code></p>

<p>execute => 验证用户身份，失败返回INPUT</p>

<p>*return: *</p>

<p>&#8220;student&#8221; => student/StuInfo.action</p>

<p>&#8220;teacher&#8221; => teacher/TeacherInfo.action</p>

<p>&#8220;admin&#8221; => admin/AdminInfo.action</p>

<p>ERROR/INPUT => /pages/Login.jsp(with validation error)</p>

<p><code>on the back:</code></p>

<ul>
<li>验证用户名和密码</li>
</ul>


<p><code>more TODO:</code></p>

<ul>
<li>用户Cookie</li>
<li>用户密码RSA加密</li>
<li>验证码</li>
</ul>


<hr />

<h3><a name="#2">2. 学生</a></h3>




<h4><a name="#2-0">2.0 class StuClass(/pages/student/info.jsp)</a></h4>


<table>
<thead>
<tr>
<th align="left">name     </th>
<th align="left">type    </th>
<th align="left">field    </th>
<th align="left">more</th>
</tr>
</thead>
<tbody>
<tr>
<td align="left">no</td>
<td align="left">String</td>
<td align="left"></td>
<td align="left">学号</td>
</tr>
<tr>
<td align="left">name</td>
<td align="left">String</td>
<td align="left"></td>
<td align="left">姓名 </td>
</tr>
<tr>
<td align="left">id</td>
<td align="left">String</td>
<td align="left"></td>
<td align="left">身份证</td>
</tr>
<tr>
<td align="left">birth</td>
<td align="left">Date</td>
<td align="left"></td>
<td align="left">出生日期</td>
</tr>
<tr>
<td align="left">dept</td>
<td align="left">String</td>
<td align="left"></td>
<td align="left">院系</td>
</tr>
<tr>
<td align="left">major</td>
<td align="left">String</td>
<td align="left"></td>
<td align="left">专业</td>
</tr>
<tr>
<td align="left">domain</td>
<td align="left">String</td>
<td align="left"></td>
<td align="left">研究方向</td>
</tr>
<tr>
<td align="left">enrollyear</td>
<td align="left">Date</td>
<td align="left"></td>
<td align="left">入学年份</td>
</tr>
<tr>
<td align="left">grade</td>
<td align="left">String</td>
<td align="left"></td>
<td align="left">所属年级</td>
</tr>
<tr>
<td align="left">schoolyear</td>
<td align="left">String</td>
<td align="left"></td>
<td align="left">学制</td>
</tr>
<tr>
<td align="left">state</td>
<td align="left">String</td>
<td align="left"></td>
<td align="left">学籍状态</td>
</tr>
<tr>
<td align="left">degree</td>
<td align="left">String</td>
<td align="left"></td>
<td align="left">学位</td>
</tr>
<tr>
<td align="left">mobile</td>
<td align="left">String</td>
<td align="left"></td>
<td align="left">手机号</td>
</tr>
<tr>
<td align="left">email</td>
<td align="left">String</td>
<td align="left"></td>
<td align="left">邮箱</td>
</tr>
<tr>
<td align="left">addr</td>
<td align="left">String</td>
<td align="left"></td>
<td align="left">地址</td>
</tr>
<tr>
<td align="left">postcode</td>
<td align="left">String</td>
<td align="left"></td>
<td align="left">邮编</td>
</tr>
<tr>
<td align="left">fname</td>
<td align="left">String</td>
<td align="left"></td>
<td align="left">父姓名</td>
</tr>
<tr>
<td align="left">fwork</td>
<td align="left">String</td>
<td align="left"></td>
<td align="left">父工作单位</td>
</tr>
<tr>
<td align="left">mname</td>
<td align="left">String</td>
<td align="left"></td>
<td align="left">母姓名</td>
</tr>
<tr>
<td align="left">mname</td>
<td align="left">String</td>
<td align="left"></td>
<td align="left">母工作单位</td>
</tr>
<tr>
<td align="left">homeNumber</td>
<td align="left">String</td>
<td align="left"></td>
<td align="left">家庭电话</td>
</tr>
</tbody>
</table>


<p><em>这里列出的是指对应的StuClass实例里面需要实现的getter和setter函数</em></p>

<p><em>例如：</em></p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="c1">//页面需要name的值，</span>
</span><span class='line'><span class="o">&lt;</span><span class="nl">s:</span><span class="n">property</span> <span class="n">value</span><span class="o">=</span><span class="s">&quot;detail.name&quot;</span><span class="o">&gt;</span>
</span><span class='line'><span class="c1">//而在后台action的类里面，有</span>
</span><span class='line'><span class="kd">private</span> <span class="n">StuClass</span> <span class="n">detail</span><span class="o">;</span>
</span><span class='line'><span class="kd">public</span> <span class="n">StuClass</span> <span class="nf">getDetail</span><span class="o">()</span>
</span><span class='line'><span class="o">{</span>
</span><span class='line'>  <span class="k">return</span> <span class="k">this</span><span class="o">.</span><span class="na">detail</span><span class="o">;</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="kd">public</span> <span class="kt">void</span> <span class="nf">setDetail</span><span class="o">(</span><span class="n">StuClass</span> <span class="n">detail</span><span class="o">)</span>
</span><span class='line'><span class="o">{</span>
</span><span class='line'>  <span class="k">this</span><span class="o">.</span><span class="na">detail</span> <span class="o">=</span> <span class="n">detail</span><span class="o">;</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="c1">//那么StuClass这个类中需要有name的getter，即：</span>
</span><span class='line'><span class="kd">public</span> <span class="n">StuClass</span> <span class="nf">getName</span><span class="o">()</span>
</span><span class='line'><span class="o">{</span>
</span><span class='line'>  <span class="k">return</span> <span class="n">xxxxxx</span><span class="o">;</span><span class="c1">//随便返回什么，但它的值必须是我要的name</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>




<br/>


<hr />

<h4><a name="#2-1">2.1 个人信息页面(/pages/student/info.jsp)</a></h4>


<p><code>action name:</code>  StuInfo</p>

<p><code>servlet name:</code> SampleProject.Student.Info</p>

<p><code>page value:</code></p>

<table>
<thead>
<tr>
<th align="left">name     </th>
<th align="left">type    </th>
<th align="left">field    </th>
<th align="left">more</th>
</tr>
</thead>
<tbody>
<tr>
<td align="left">username </td>
<td align="left">String  </td>
<td align="left">         </td>
<td align="left">用户名</td>
</tr>
<tr>
<td align="left">identity </td>
<td align="left">String  </td>
<td align="left">{0,1,2}  </td>
<td align="left">用户身份：学生、教师、管理员</td>
</tr>
</tbody>
</table>


<p><code>action method:</code></p>

<p>execute => 利用session获得用户名和用户身份</p>

<p><em>return:</em></p>

<p>SUCCESS => /pages/student/info.jsp</p>

<p>ERROR => Login.action</p>

<p><code>on the back:</code></p>

<ul>
<li>利用session获得用户名和用户身份</li>
<li>验证用户名权限，错误则返回Login.action</li>
</ul>


<p><code>more TODO:</code></p>

<ul>
<li>全局通知栏</li>
</ul>


<hr />

<h4><a name="#2-1-1">2.1.1 毕业信息核对(/pages/student/infoCheck.jsp)</a></h4>


<p><code>action name:</code>  StuInfoCheck</p>

<p><code>servlet name:</code> SampleProject.Student.InfoCheck</p>

<p><code>page value:(????????)</code></p>

<table>
<thead>
<tr>
<th align="left">name     </th>
<th align="left">type    </th>
<th align="left">field    </th>
<th align="left">more</th>
</tr>
</thead>
<tbody>
<tr>
<td align="left">detail</td>
<td align="left"><a href="#2-0">StuClass</a></td>
<td align="left"></td>
<td align="left">用户信息</td>
</tr>
<tr>
<td align="left">detail.no</td>
<td align="left">String</td>
<td align="left"></td>
<td align="left">学号</td>
</tr>
<tr>
<td align="left">detail.name</td>
<td align="left">String</td>
<td align="left"></td>
<td align="left">姓名 </td>
</tr>
<tr>
<td align="left">detail.id</td>
<td align="left">String</td>
<td align="left"></td>
<td align="left">身份证</td>
</tr>
<tr>
<td align="left">detail.dept</td>
<td align="left">String</td>
<td align="left"></td>
<td align="left">院系</td>
</tr>
<tr>
<td align="left">detail.major</td>
<td align="left">String</td>
<td align="left"></td>
<td align="left">专业</td>
</tr>
<tr>
<td align="left">detail.domain</td>
<td align="left">String</td>
<td align="left"></td>
<td align="left">研究方向</td>
</tr>
<tr>
<td align="left">detail.enrollyear</td>
<td align="left">Date</td>
<td align="left"></td>
<td align="left">入学年份</td>
</tr>
<tr>
<td align="left">detail.grade</td>
<td align="left">String</td>
<td align="left"></td>
<td align="left">所属年级</td>
</tr>
<tr>
<td align="left">detail.schoolyear</td>
<td align="left">String</td>
<td align="left"></td>
<td align="left">学制</td>
</tr>
<tr>
<td align="left">detail.degree</td>
<td align="left">String</td>
<td align="left"></td>
<td align="left">学位</td>
</tr>
</tbody>
</table>


<p><a href="#2-0">使用说明</a>见学生类</p>

<p><code>action method:</code></p>

<p>execute => 执行基本信息的读取</p>

<p><em>return:</em></p>

<p>SUCCESS => /pages/student/infoCheck.jsp</p>

<p>ERROR => Login.action</p>

<p><code>on the back:</code></p>

<ul>
<li>利用session获得用户名和用户身份</li>
<li>验证用户名权限，错误则返回Login.action</li>
<li>读取学生毕业信息，填充相应字段</li>
</ul>


<p><code>more TODO:</code></p>

<hr />

<h4><a name="#2-1-2">2.1.2 基本信息修改(/pages/student/infoModify.jsp)</a></h4>


<p><code>action name:</code>  StuInfoModify</p>

<p><code>servlet name:</code> SampleProject.Student.InfoModify</p>

<p><code>page value:</code></p>

<table>
<thead>
<tr>
<th align="left">name     </th>
<th align="left">type    </th>
<th align="left">field    </th>
<th align="left">more</th>
</tr>
</thead>
<tbody>
<tr>
<td align="left">mobile</td>
<td align="left">String</td>
<td align="left"></td>
<td align="left">手机号</td>
</tr>
<tr>
<td align="left">email</td>
<td align="left">String</td>
<td align="left"></td>
<td align="left">邮箱</td>
</tr>
<tr>
<td align="left">addr</td>
<td align="left">String</td>
<td align="left"></td>
<td align="left">地址</td>
</tr>
<tr>
<td align="left">postcode</td>
<td align="left">String</td>
<td align="left"></td>
<td align="left">邮编</td>
</tr>
<tr>
<td align="left">fname</td>
<td align="left">String</td>
<td align="left"></td>
<td align="left">父姓名</td>
</tr>
<tr>
<td align="left">fwork</td>
<td align="left">String</td>
<td align="left"></td>
<td align="left">父工作单位</td>
</tr>
<tr>
<td align="left">mname</td>
<td align="left">String</td>
<td align="left"></td>
<td align="left">母姓名</td>
</tr>
<tr>
<td align="left">mname</td>
<td align="left">String</td>
<td align="left"></td>
<td align="left">母工作单位</td>
</tr>
<tr>
<td align="left">homeNumber</td>
<td align="left">String</td>
<td align="left"></td>
<td align="left">家庭电话</td>
</tr>
</tbody>
</table>


<p><em>注意</em></p>

<p><code>action method:</code></p>

<p>execute => 执行基本信息的读取</p>

<p><em>return</em></p>

<p>SUCCESS => /pages/student/infoModify.jsp</p>

<p>ERROR => Login.action</p>

<p><code>action method:</code></p>

<p>tryModify => 尝试执行基本信息的修改</p>

<p>成功：addActionMessage()</p>

<p>失败：addActionError()</p>

<p><em>return</em></p>

<p>SUCCESS => /pages/student/infoModify.jsp</p>

<p>&#8220;fail&#8221; => /pages/student/infoModify.jsp</p>

<p><code>on the back:</code></p>

<ul>
<li>利用session获得用户名和用户身份</li>
<li>验证用户名权限，错误则返回Login.action</li>
<li>在初次载入页面时，将 执行execute函数</li>
<li>在使用页面上的button提交修改时，将 执行 该action的 tryModify函数</li>
</ul>


<p><code>more TODO:</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[优酷手机党福利]]></title>
    <link href="http://xudshen.github.com/archives/2013/04/10/generate-html5-video/"/>
    <updated>2013-04-10T16:27:00+08:00</updated>
    <id>http://xudshen.github.com/archives/2013/04/10/generate-html5-video</id>
    <content type="html"><![CDATA[<p>用lumia在优酷上看视频有个问题：不支持flash，</p>

<p>虽说有html5了，也有m.youku.com，但还是好多视频看不了，</p>

<p>所以搞了个小蛋疼代码。</p>

<!--more-->


<hr />

<h3>输入</h3>

<script type="text/javascript">
    function doAdd()
    {
        var element = document.getElementById("showFrame");
        element.innerHTML = document.getElementById("srcUrl").value;
    };
</script>


<div>
    <input id="srcUrl" type="text" value="" autocomplete="off">
    <button onClick="doAdd()">Generate</button>
</div>


<div id="showFrame">
</div>


<hr />

<h3>使用方法</h3>

<ol>
<li><p>点击优酷页面中的分享，如下图</p>

<p><img src="http://xudshen.github.com/assets/2013/04/10/youku1.jpg" alt="点击优酷页面中的分享" /></p></li>
<li><p>选择通用代码，拷贝到上面的输入框中，如下图</p>

<p><img src="http://xudshen.github.com/assets/2013/04/10/youku2.jpg" alt="选择通用代码" /></p></li>
<li><p>点击Generate即可观看</p></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ListViewBase中的CanReorderItems属性]]></title>
    <link href="http://xudshen.github.com/archives/2013/04/10/canreorderitems-property-in-listviewbase/"/>
    <updated>2013-04-10T13:44:00+08:00</updated>
    <id>http://xudshen.github.com/archives/2013/04/10/canreorderitems-property-in-listviewbase</id>
    <content type="html"><![CDATA[<p>最近使用GridView时，想实现Item之间的自由拖动排列，一开始自己写了个Panel，后来才发现自带的API中已经有了这么一个属性CanReorderItems，然而在设置为true之后，不没有能使Item自由排列，google了一下才找到原因。</p>

<!--more-->


<p>下面是Flores Eken的解释</p>

<blockquote><p>But, there are some things you need to know to get it to work. First of all the AllowDrop property also needs to be set to true.</p><p>And the grid or list needs to be binded to a ObservableVector (no ObservableCollection is not good enough). <br/>But in the developer preview only an interface exists for this collection, so you have to make your own implementation or borrow one.. like this one.</p><p>One caveat remains.. the ObservableVector needs to be initialized with object as T, strong types will not work in the developer preview of windows 8. Like so:</p><footer><strong>Flores Eken</strong> <cite><a href='http://www.itq.nl/blogs/post/CanReorderItems3dtrue.aspx'>CanReorderItems=&#8221;true&#8221;</a></cite></footer></blockquote>


<p>简单易懂，就不翻译了=。=</p>

<p>但使用过程中有以下注意点(from <strong>MSDN</strong> <a href="http://msdn.microsoft.com/zh-cn/library/windows/apps/windows.ui.xaml.controls.listviewbase.canreorderitems.aspx"><em>ListViewBase.CanReorderItems Property</em></a>):</p>

<blockquote><ul>
<li><p>如果启用了项目选择，并且将 <a href="http://msdn.microsoft.com/zh-cn/library/windows/apps/windows.ui.xaml.controls.listviewbase.isswipeenabled.aspx">IsSwipeEnabled</a>
 设置为 false，则用户可以通过鼠标右击来取消选择项目，但是不能通过重击手势，使用触控来取消选择项目。</p></li>
<li><p>如果将 <a href="http://msdn.microsoft.com/zh-cn/library/windows/apps/windows.ui.xaml.controls.listviewbase.candragitems.aspx">CanDragItems</a>
 设置为 true，并将 <a href="http://msdn.microsoft.com/zh-cn/library/windows/apps/windows.ui.xaml.controls.listviewbase.isswipeenabled.aspx">IsSwipeEnabled</a>
 设置为 false，则用户可以用鼠标拖动项目，但不能通过触摸方式。</p></li>
<li><p>如果将 <a href="http://msdn.microsoft.com/zh-cn/library/windows/apps/windows.ui.xaml.controls.listviewbase.canreorderitems.aspx">CanReorderItems</a>
 设置为 true，并将 <a href="http://msdn.microsoft.com/zh-cn/library/windows/apps/windows.ui.xaml.controls.listviewbase.isswipeenabled.aspx">IsSwipeEnabled</a>
 设置为 false，则用户可以用鼠标对项目重新排序，但不能通过触摸方式。</p></li>
</ul>
</blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[乔迁之喜]]></title>
    <link href="http://xudshen.github.com/archives/2013/04/09/cong/"/>
    <updated>2013-04-09T01:01:00+08:00</updated>
    <id>http://xudshen.github.com/archives/2013/04/09/cong</id>
    <content type="html"><![CDATA[<p>近日将从博客园陆续搬过来。</p>

<p>高兴高兴！</p>

<!--more-->

]]></content>
  </entry>
  
</feed>
